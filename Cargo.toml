[package]
authors = ["bwinter"]
description = "A set of declarative macros which retries executing a function upon failure"
documentation = "https://docs.rs/retry_macro/0.1.0/retry_macro/"
edition = "2021"
include = ["Cargo.toml", "src/**/*.rs", "README.md", "LICENSE-APACHE", "LICENSE-MIT"]
keywords = ["macro", "retry", "sync", "async", "tokio"]
license = "MIT/Apache-2.0"
name = "retry_macro"
readme = "README.md"
repository = "https://github.com/bwintertkb/retry_macro"
version = "0.3.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
shadow-clone = "1.2.1"
tokio = {version = "1.21.2", features = ["macros", "rt-multi-thread", "time"], optional = true}
async-std = { version = "1", optional = true }

[dev-dependencies]
tokio = { version = "1.21.2", features = ["macros", "rt-multi-thread", "time"] }

[features]

# Enables the 'call_retry_async_sleep' macro if you want to pause the async task between execution attempts.
# You should choose between tokio or async-std implementation.
tokio = ["dep:tokio"]
async-std = ["dep:async-std"]
